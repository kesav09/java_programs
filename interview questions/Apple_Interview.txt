telephonic:
1. Given a prototype, some weird nested non static and nested class, fill all the methods of a linkedlist(addfirst, addlast,
deletefirst, deletemid, reverse, insertfirst, insertlast, print)
2. Given a prototype, some nested class, print if the number is prime or not. 



telephonic:
1. what features to consider while designing a test framework
2. How are REST calls made
3. How to serialize and deserialize. how to do custom serialization. what is the library in jackson to do the same. 
4. how to compare two large jsons
5. how to edit content in jsons while comparing them.
6. what happens when we type in google.com
7. how to parse a file which has [timestamp:serviceId:error/warning messages]
8. how does a http request and response look like. 


telephonic:
1. sumOfString
	/*
	 * To execute Java, please define "static void main" on a class named Solution.
	 * 
	 * If you need more classes, simply define them inline.
	 * 
	 * "1+2+3" -> 6 "-4+1" -> -3
	 * 
	 * 0-9 + or - binary or unary
	 */
2. questions about GSM architecture and tests we perform.

onsite:
1. given a bunch of services and their instances, need to devise a method to verify that all the services have been deployed correctly on all instances.
	multiple environments (E1,E2...), multiple services (S1,S2..), multiple instances for each service (I1,I2,I3..)
	- ask for a list of apis from devs to be implemented. 
	- type of data structure to be used to keep the list of environments, its services and their instances.
	- the return type should tell us whether the environments and their services were deployed properly. If not, return the message in the return value to know which service instance 
		was wrongly deployed and what was the reason for it.   
	- write a psuedo code.
2. design/code a generic hashmap.
3. Design a class has a constructor which takes an unknown data type. (use generics)
4. puzzle: one jar - 5 litres, second jar 3 litres. unlimited source of water. we need to get 4 litres in 5 litre jar. 
5. what was the toughest thing performed in job.
6. find replace problem.
7. all about REST. get/post, put/post, their examples, etc
8. given a sharded database which has information about customers (customer_id, customer_name,amount_spent,age), find out top 10% of customers who have spent more than $1000 in the company 	store for the last 6 months.
9. caching algorithm (LRU,etc)
10. testng, dataproviders, etc
11. how to send login password using rest
12. touched security aspects of rest.
13. what is memory leak? example of memory leak. how a memory is distributed in java?
14. design a system using strategy, decorator and factory pattern.

onsite:
1. give an example of observer pattern. Yahoo finance and Nasdaq using observer pattern.
2. design a caching server.
3. singleton and modified binary search problem. handle edge cases for the binary search problem
4. TicTacToe